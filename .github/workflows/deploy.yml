name: Terraform Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Set Terraform Subscription ID
      run: echo "TF_VAR_subscription_id=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)" >> $GITHUB_ENV

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Initialize Terraform
      run: terraform init
      working-directory: Infra

    - name: Plan Terraform
      run: terraform plan -out=tfplan -var-file=Vars/kube_deploy.tfvars | tee plan_output.txt
      working-directory: Infra

    # Extract Plan
    - name: Check Terraform Plan for Additions or Destroys
      id: check_plan
      run: |
        sed 's/\x1b\[[0-9;]*m//g' Infra/plan_output.txt > Infra/plan_clean_output.txt
        ADDS=$(grep "Plan: " Infra/plan_clean_output.txt | awk '{print $2}')
        CHANGES=$(grep "Plan: " Infra/plan_clean_output.txt | awk '{print $4}')
        DESTROYS=$(grep "Plan: " Infra/plan_clean_output.txt | awk '{print $6}')

        echo "Adds: $ADDS, Changes: $CHANGES, Destroys: $DESTROYS"

        if [[ "$ADDS" -gt 0 || "$DESTROYS" -gt 0 ]]; then
          echo "manual_approval=true" >> $GITHUB_ENV
        else
          echo "manual_approval=false" >> $GITHUB_ENV
        fi
    
    # If manual approval is required, wait for manual intervention
    - name: Manual Approval
      if: env.manual_approval == 'true'
      uses: hmarr/auto-approve-action@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Apply Terraform
      run: terraform apply -var-file=Vars/kube_deploy.tfvars
      working-directory: Infra
